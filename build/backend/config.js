// Generated by CoffeeScript 1.8.0
var configPath, defaultDir, fs, log, path, process, touch;

path = require('path-extra');

fs = require('fs-extra');

touch = require('touch');

process = require('process');

log = require('printit')({
  prefix: 'Data Proxy | config'
});

defaultDir = path.join(path.homedir(), '.cozy-data-proxy');

configPath = path.join(defaultDir, './config.json');

fs.ensureFileSync(configPath);

if (fs.readFileSync(configPath).toString() === '') {
  fs.writeFileSync(configPath, '{ "devices": {} }');
}

module.exports = {
  dir: defaultDir,
  dbPath: path.join(defaultDir, 'db'),
  config: require(configPath || {}),
  getConfig: function(deviceName) {
    if (deviceName == null) {
      deviceName = this.getDeviceName();
    }
    if (this.config.devices[deviceName] != null) {
      return this.config.devices[deviceName];
    } else if (Object.keys(this.config.devices).length === 0) {
      return {};
    } else {
      log.error("Device not set locally: " + deviceName);
      return process.exit(1);
    }
  },
  getDeviceName: function() {
    var arg, index, _i, _len, _ref;
    _ref = process.argv;
    for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
      arg = _ref[index];
      if (arg === '-d' || arg === '--deviceName') {
        return process.argv[index + 1];
      }
    }
    return Object.keys(this.config.devices)[0];
  },
  addRemoteCozy: function(options) {
    var _base;
    if ((_base = this.config).devices == null) {
      _base.devices = {};
    }
    this.config.devices[options.deviceName] = options;
    return this.saveConfig();
  },
  removeRemoteCozy: function(deviceName) {
    var _base;
    if ((_base = this.config).devices == null) {
      _base.devices = {};
    }
    delete this.config.devices[deviceName];
    return this.saveConfig();
  },
  saveConfig: function() {
    return fs.writeFileSync(configPath, JSON.stringify(this.config, null, 2));
  }
};
