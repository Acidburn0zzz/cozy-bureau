// Generated by CoffeeScript 1.8.0
var PouchDB, Promise, config, db, fs, log;

PouchDB = require('pouchdb');

fs = require('fs-extra');

log = require('printit')({
  prefix: 'Data Proxy | db'
});

config = require('./config');

Promise = require('bluebird');

db = Promise.promisifyAll(new PouchDB(config.dbPath));

db.setMaxListenersAsync(30);

fs.ensureDirSync(config.dir);

module.exports = {
  db: db,
  addFilter: function(docType, callback) {
    var id, map, newDesignDoc;
    id = "_design/" + (docType.toLowerCase());
    map = "function (doc) {\n    if (doc.docType.toLowerCase() === \"" + docType + "\".toLowerCase()) {\n        return emit(doc._id, doc);\n    }\n}";
    newDesignDoc = {
      _id: id,
      views: {
        all: {
          map: map
        }
      }
    };
    return db.get(id, function(err, currentDesignDoc) {
      callback(null);
      if (currentDesignDoc != null) {
        newDesignDoc._rev = currentDesignDoc._rev;
      }
      return db.put(newDesignDoc, function(err, res) {
        if (err != null) {
          if (err.status === 409) {
            return callback(null);
          } else {
            return callback(err);
          }
        } else {
          if (currentDesignDoc == null) {
            log.info("Design document created: " + id);
          }
          return callback(null);
        }
      });
    });
  },
  removeFilter: function(docType, callback) {
    var id;
    id = "_design/" + (docType.toLowerCase());
    return db.get(id, function(err, currentDesignDoc) {
      if (currentDesignDoc != null) {
        return db.remove(id, currentDesignDoc._rev, function(err, res) {
          if (err != null) {
            return callback(err);
          } else {
            return callback(null);
          }
        });
      } else {
        log.info("Design document does not exist: " + id);
        return callback(null);
      }
    });
  }
};
