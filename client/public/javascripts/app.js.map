{"version":3,"file":"public/javascripts/app.js","sources":["app/basic_components.coffee","app/config.coffee","app/dashboard.coffee","app/en.coffee","app/helpers.coffee","app/wizard.coffee","app/initialize.coffee"],"names":[],"mappings":"AAEA;;AAAA,OAAuD,KAAK,CAAC,GAA7D,EAAC,cAAD,EAAM,UAAN,EAAS,cAAT,EAAc,gBAAd,EAAoB,UAApB,EAAuB,kBAAvB,EAA8B,kBAA9B,EAAqC,YAArC,EAAyC,YAAzC,EAA6C,oBAA7C;;AAAA,IAEA,GAAO,KAAK,CAAC,WAAN,CAEH;AAAA,UAAQ;AACJ;AAAA,gBAAY,IAAC,MAAK,CAAC,SAAnB;;MACA,YAAa;KADb;WAEA,IAAI;AAAA,iBAAY,mBAAgB,SAA5B;KAAJ,EAA6C,IAAC,MAAK,CAAC,QAApD,EAHI;EAAA,CAAR;CAFG,CAFP;;AAAA,SAUA,GAAY,KAAK,CAAC,WAAN,CAER;AAAA,UAAQ;AACJ;AAAA,gBAAY,YAAZ;AACA,QAAiC,IAAC,MAAK,CAAC,SAAxC;AAAA,mBAAa,IAAC,MAAK,CAAC,SAApB;KADA;WAEA,IAAI;AAAA,iBAAW,SAAX;KAAJ,EAA0B,IAAC,MAAK,CAAC,QAAjC,EAHI;EAAA,CAAR;CAFQ,CAVZ;;AAAA,KAkBA,GAAQ,KAAK,CAAC,WAAN,CAEJ;AAAA,UAAQ;WACJ,GAAG,EAAH,EAAO,IAAC,MAAK,CAAC,IAAd,EADI;EAAA,CAAR;CAFI,CAlBR;;AAAA,QAwBA,GAAW,KAAK,CAAC,WAAN,CAEP;AAAA,UAAQ;WACJ,GAAG,EAAH,EAAO,IAAC,MAAK,CAAC,IAAd,EADI;EAAA,CAAR;CAFO,CAxBX;;AAAA,MA8BA,GAAS,KAAK,CAAC,WAAN,CAEL;AAAA,UAAQ;WACJ,OACI;AAAA,iBAAY,kBAAe,IAAC,MAAK,CAAC,SAAlC;AAAA,MACA,KAAK,IAAC,MAAK,CAAC,GADZ;AAAA,MAEA,SAAS,IAAC,MAAK,CAAC,OAFhB;KADJ,EAIE,IAAC,MAAK,CAAC,IAJT,EADI;EAAA,CAAR;CAFK,CA9BT;;AAAA,KAwCA,GAAQ,KAAK,CAAC,WAAN,CAEJ;AAAA,mBAAiB;WACb;AAAA,aAAO,IAAP;MADa;EAAA,CAAjB;AAAA,EAGA,QAAQ;AACJ;;WAAM,CAAC,OAAQ;KAAf;WACA,KAAK,IAAL,EACI,MAAM;AAAA,iBAAW,cAAX;KAAN,EAAiC,IAAC,MAAK,CAAC,KAAxC,CADJ,EAEI,MACI;AAAA,YAAM,IAAC,MAAK,CAAC,IAAb;AAAA,MACA,WAAY,SAAM,IAAC,MAAK,CAAC,UADzB;AAAA,MAEA,KAAK,IAAC,MAAK,CAAC,QAFZ;AAAA,MAGA,cAAc,IAAC,MAAK,CAAC,YAHrB;AAAA,MAIA,UAAU,IAAC,SAJX;AAAA,MAKA,SAAS,IAAC,MAAK,CAAC,OALhB;AAAA,MAMA,aAAa,IAAC,MAAK,CAAC,WANpB;AAAA,MAOA,IAAI,IAAC,MAAK,CAAC,OAPX;KADJ,CAFJ,EAY0C,IAAC,MAAK,CAAC,KAA7C,KAAE;AAAA,iBAAW,OAAX;KAAF,EAAsB,IAAC,MAAK,CAAC,KAA7B,UAZJ,EAFI;EAAA,CAHR;AAAA,EAmBA,UAAU;WACN,IAAC,KAAK,KAAC,MAAK,CAAC,QAAP,CAAgB,CAAC,UAAvB,EAAmC,CAAC,MAD9B;EAAA,CAnBV;AAAA,EAsBA,SAAS;WACL,IAAC,SAAD,OAAiB,GADZ;EAAA,CAtBT;AAAA,EAyBA,UAAU;WACN,mBADM;EAAA,CAzBV;AAAA,EA4BA,UAAU;AACN;AAAA,UAAM,IAAC,KAAK,KAAC,MAAK,CAAC,QAAP,CAAgB,CAAC,UAAvB,EAAmC,CAAC,KAA1C;AACA,QAAG,QAAO,EAAV;AACI,UAAC,SAAD,CAAU;AAAA,eAAO,EAAE,IAAC,SAAD,EAAF,CAAP;OAAV,EADJ;KAAA;AAGI,UAAC,SAAD,CAAU;AAAA,eAAO,IAAP;OAAV,EAHJ;KADA;WAKA,IAAC,MAAK,CAAC,QAAP,GANM;EAAA,CA5BV;CAFI,CAxCR;;AAAA,QA+EA,GAAW,KAAK,CAAC,WAAN,CAEP;AAAA,UAAQ;AACJ;AAAA,QAAG,uBAAH;AACI,cAAQ,KAAK,IAAL,EACJ,EACI;AAAA,cAAM,KAAG,IAAC,MAAK,CAAC,IAAI,CAAC,IAAf,GAAoB,KAApB,GAAyB,IAAC,MAAK,CAAC,KAAtC;OADJ,EAEE,IAAC,MAAK,CAAC,KAFT,CADI,CAAR,CADJ;KAAA;AAMI,cAAQ,KAAK,IAAL,EAAY,IAAC,MAAK,CAAC,KAAnB,CAAR,CANJ;KAAA;WAQA,KAAK;AAAA,iBAAW,UAAX;KAAL,EACI,KAAK;AAAA,iBAAW,gBAAX;KAAL,EAAkC,KAAG,IAAC,MAAK,CAAC,KAAV,GAAgB,GAAlD,CADJ,EAEI,KAAK;AAAA,iBAAW,UAAX;KAAL,EAA4B,KAA5B,CAFJ,EATI;EAAA,CAAR;CAFO,CA/EX;CCFA;;AAAA,OAAO,QAAQ,YAAR,CAAP;;AAAA,EACA,GAAK,QAAQ,IAAR,CADL;;AAAA,OAOA,GAAU,IAAI,CAAC,OAAL,EAPV;;AAAA,SAQA,GAAY,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,kBAAnB,CARZ;;AAAA,UASA,GAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,aAArB,CATb;;AAUA,IAAG,GAAM,CAAC,UAAH,CAAc,UAAd,CAAP;AACI,IAAE,CAAC,aAAH,CAAiB,UAAjB,EAA6B,IAAI,CAAC,SAAL,CAAe;AAAA,aAAS,EAAT;GAAf,EAA4B,IAA5B,EAAkC,CAAlC,CAA7B,EADJ;CAVA;;AAAA,MAaA,GAAS,QAAQ,UAAR,CAbT;;AAAA,IAeA,GAAO,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,OAAnB,CAfP;;AAgBA,IAAoC,IAAI,CAAC,MAAL,GAAc,CAAlD;AAAA,WAAS,MAAM,CAAC,OAAQ,KAAK,GAAL,CAAxB;CAhBA;;;EAiBA,SAAU;CAjBV;;AAAA,aAmBA,GAGI;AAAA,kBAAgB,SAAC,YAAD;AACZ;AAAA,iBAAa,CAAC,OAAQ,OAAM,CAAC,UAAP,CAAtB;AACA;gCAAA;AACI,YAAO,KAAP,GAAc,YAAa,KAA3B,CADJ;AAAA,KADA;AAAA,IAGA,MAAM,CAAC,OAAQ,OAAM,CAAC,UAAP,CAAf,GAAoC,MAHpC;AAAA,IAKA,EAAE,CAAC,aAAH,CAAiB,UAAjB,EAA6B,IAAI,CAAC,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAA7B,CALA;WAMA,OAAO,CAAC,GAAR,CAAY,yCAAZ,EAPY;EAAA,CAAhB;AAAA,EASA,UAAU;AACN,QAAO,yBAAP;aACI,QADJ;KAAA,MAEK,IAAO,mBAAP;aACD,QADC;KAAA,MAEA,IAAO,uBAAP;aACD,QADC;KAAA;aAGD,QAHC;KALC;EAAA,CATV;CAtBJ;CCAA;;AAAA,YAAY,KAAK,CAAC,WAAN,CAER;AAAA,mBAAiB;WACb;AAAA,YAAM,EAAN;AAAA,MACA,MAAM,KADN;MADa;EAAA,CAAjB;AAAA,EAIA,QAAQ;AACJ;AAAA,WAAO,EAAP;AACA,QAAG,IAAC,MAAK,CAAC,IAAI,CAAC,MAAZ,KAAsB,CAAzB;AACI,UAAI,CAAC,IAAL,CAAU,KAAK;AAAA,mBAAW,SAAX;OAAL,EAA2B,sBAA3B,CAAV,EADJ;KAAA;AAGI,UAAI,CAAJ;AACA;AAAA;uBAAA;AAAA,YAAI,CAAC,IAAL,CAAU,KAAK;AAAA,eAAM,SAAK,CAAC,GAAD,CAAX;AAAA,UAAmB,WAAW,SAA9B;SAAL,EAA8C,GAA9C,CAAV;AAAA,OADA;AAAA,MAEA,IAAI,CAAC,OAAL,EAFA,CAHJ;KADA;AAQA,QAAG,IAAC,MAAK,CAAC,IAAV;AACI,cAAQ,EAAE,IAAF,CAAR;AAAA,MACA,kBAAkB,EAAE,WAAF,CADlB,CADJ;KAAA;AAII,cAAQ,EAAE,KAAF,CAAR;AAAA,MACA,kBAAkB,EAAE,YAAF,CADlB,CAJJ;KARA;WAeA,UAAU;AAAA,iBAAW,MAAX;KAAV,EACI,MAAM;AAAA,YAAM,iBAAN;KAAN,CADJ,EAEI,UAAU;AAAA,iBAAW,cAAX;KAAV,EACI,SAAS;AAAA,YAAM,YAAN;KAAT,CADJ,EAEI,SAAS;AAAA,aAAO,EAAE,aAAF,CAAP;AAAA,MAAyB,OAAO,MAAM,CAAC,UAAvC;KAAT,CAFJ,EAGI,SACI;AAAA,aAAO,EAAE,MAAF,CAAP;AAAA,MACA,MACI;AAAA,cAAM,MAAN;OAFJ;AAAA,MAGA,OAAO,MAAM,CAAC,IAHd;KADJ,CAHJ,EAQI,SAAS;AAAA,aAAO,EAAE,KAAF,CAAP;AAAA,MAAiB,OAAO,MAAM,CAAC,GAA/B;KAAT,CARJ,EASI,SAAS;AAAA,aAAO,EAAE,YAAF,CAAP;AAAA,MAAwB,OAAO,KAA/B;KAAT,CATJ,CAFJ,EAYI,UAAU;AAAA,iBAAW,cAAX;KAAV,EACI,SAAS;AAAA,YAAM,SAAN;KAAT,CADJ,EAEI,KAAK;AAAA,iBAAW,KAAX;KAAL,EACI,OACI;AAAA,iBAAW,aAAX;AAAA,MACA,SAAS,IAAC,cADV;AAAA,MAEA,MAAM,eAFN;KADJ,CADJ,CAFJ,EAOI,KAAK;AAAA,iBAAW,KAAX;KAAL,EACI,OACI;AAAA,iBAAW,MAAX;AAAA,MACA,SAAS,IAAC,gBADV;AAAA,MAEA,MAAM,EAAE,YAAF,CAFN;KADJ,CADJ,CAPJ,EAgBI,KAAK;AAAA,iBAAW,KAAX;KAAL,EACI,OACI;AAAA,iBAAW,SAAX;AAAA,MACA,SAAS,IAAC,6BADV;AAAA,MAEA,MAAM,EAAE,sBAAF,CAFN;KADJ,CADJ,CAhBJ,CAZJ,EAiCI,KAAK,IAAL,CAjCJ,EAkCI,KAAK,IAAL,EACI,SAAS;AAAA,YAAM,MAAN;KAAT,CADJ,EAEI,IAFJ,EAGI,KAAK,IAAL,EACI,OACI;AAAA,iBAAW,cAAX;AAAA,MACA,SAAS,IAAC,UADV;AAAA,MAEA,MAAM,EAAE,YAAF,CAFN;KADJ,CADJ,CAHJ,CAlCJ,EAhBI;EAAA,CAJR;AAAA,EA+DA,eAAe;AACX;AAAA,QAAG,IAAC,MAAK,CAAC,IAAV;AACI,UAAC,SAAD,CAAU;AAAA,cAAM,KAAN;OAAV;AACA,UAAwB,IAAC,WAAzB;AAAA,YAAC,WAAU,CAAC,MAAZ;OADA;AAEA,UAAoB,IAAC,QAArB;AAAA,YAAC,QAAO,CAAC,KAAT;OAFA;aAGA,IAAC,WAAD,CAAY,uBAAZ,EAJJ;KAAA;AAMI,oBAAc,QAAQ,uBAAR,CAAd;AAAA,MACA,aAAa,QAAQ,sBAAR,CADb;AAAA,MAEA,SAAS,QAAQ,kBAAR,CAFT;AAAA,MAGA,IAAC,WAAD,CAAY,yBAAZ,CAHA;AAAA,MAKA,WAAW;eAAA,SAAC,MAAD;iBACP,KAAC,WAAD,CAAY,KAAG,MAAM,CAAC,YAAV,GAAuB,sBAAnC,EADO;QAAA;MAAA,QALX;AAAA,MAQA,aAAa;eAAA;iBACT,KAAC,WAAD,CAAY,0BAAZ,EADS;QAAA;MAAA,QARb;AAAA,MAWA,qBAAqB;eAAA,SAAC,UAAD;iBACjB,KAAC,WAAD,CAAa,UAAO,UAAP,GAAkB,aAA/B,EADiB;QAAA;MAAA,QAXrB;AAAA,MAcA,qBAAqB;eAAA,SAAC,OAAD;iBACjB,KAAC,WAAD,CAAa,YAAS,OAAT,GAAiB,UAA9B,EADiB;QAAA;MAAA,QAdrB;AAAA,MAiBA,IAAC,WAAD,GAAc,WAAW,CAAC,cAAZ,CACV;AAAA,oBAAY,IAAZ;AAAA,QACA,UAAU,IADV;AAAA,QAEA,YAAY,IAFZ;AAAA,QAGA,WAAW,KAHX;AAAA,QAIA,aAAa,IAJb;OADU,CAjBd;AAAA,MAwBA,IAAC,WAAU,CAAC,EAAZ,CAAe,QAAf,EAAyB,QAAzB,CAxBA;AAAA,MAyBA,IAAC,WAAU,CAAC,EAAZ,CAAe,UAAf,EAA2B,UAA3B,CAzBA;AAAA,MA0BA,IAAC,QAAD,GAAW,UAAU,CAAC,YAAX,CAAwB,IAAxB,EAA8B,IAA9B,CA1BX;AAAA,MA4BA,MAAM,CAAC,aAAa,CAAC,EAArB,CAAwB,kBAAxB,EAA4C,kBAA5C,CA5BA;AAAA,MA6BA,UAAU,CAAC,aAAa,CAAC,EAAzB,CAA4B,kBAA5B,EAAgD,kBAAhD,CA7BA;AAAA,MA+BA,IAAC,WAAD,CAAY,uBAAZ,CA/BA;aAiCA,IAAC,SAAD,CAAU;AAAA,cAAM,IAAN;OAAV,EAvCJ;KADW;EAAA,CA/Df;AAAA,EAyGA,WAAW;WACP,IAAC,SAAD,CAAU;AAAA,YAAM,EAAN;KAAV,EADO;EAAA,CAzGX;AAAA,EA4GA,YAAY,SAAC,GAAD;AACR;AAAA,WAAO,IAAC,MAAK,CAAC,IAAd;AAAA,IACA,SAAS,QAAQ,QAAR,CADT;AAAA,IAEA,IAAI,CAAC,IAAL,CAAU,QAAQ,CAAC,MAAT,CAAgB,WAAhB,IAA+B,GAAzC,CAFA;WAGA,IAAC,SAAD,CAAU;AAAA,YAAM,IAAN;KAAV,EAJQ;EAAA,CA5GZ;AAAA,EAkHA,8BAA8B;AAC1B;AAAA,aAAS,QAAQ,kBAAR,CAAT;AAAA,IACA,MAAM,CAAC,gBAAP,CAAwB,MAAM,CAAC,UAA/B,CADA;AAAA,IAEA,MAAM,CAAC,UAAP,EAFA;AAAA,IAGA,MAAM,EAAE,wBAAF,CAAN,CAHA;WAIA,YAAY,OAAZ,EAL0B;EAAA,CAlH9B;AAAA,EAyHA,sBAAsB;AAClB;AAAA,UAAM,QAAQ,KAAR,CAAN;WACA,IAAI,KAAG,MAAM,CAAC,IAAV,GAAe,IAAnB,EAAwB;AAAA,aAAO,IAAP;KAAxB,EAAqC,SAAC,GAAD;AACjC,UAAmB,GAAnB;AAAA,eAAO,CAAC,GAAR,CAAY,GAAZ;OAAA;aACA,MAAM,EAAE,sCAAF,CAAN,EAFiC;IAAA,CAArC,EAFkB;EAAA,CAzHtB;AAAA,EA+HA,iBAAiB;AACb;AAAA,kBAAc,QAAQ,uBAAR,CAAd;AAAA,IACA,aAAa,QAAQ,sBAAR,CADb;AAAA,IAEA,SAAS,QAAQ,kBAAR,CAFT;AAAA,IAIA,IAAC,UAAD,EAJA;AAAA,IAKA,IAAC,WAAD,CAAY,yBAAZ,CALA;AAAA,IAOA,WAAW;aAAA,SAAC,MAAD;eACP,KAAC,WAAD,CAAY,KAAG,MAAM,CAAC,YAAV,GAAuB,sBAAnC,EADO;MAAA;IAAA,QAPX;AAAA,IAUA,aAAa;aAAA;eACT,KAAC,WAAD,CAAY,0BAAZ,EADS;MAAA;IAAA,QAVb;AAAA,IAaA,qBAAqB;aAAA,SAAC,UAAD;eACjB,KAAC,WAAD,CAAa,UAAO,UAAP,GAAkB,aAA/B,EADiB;MAAA;IAAA,QAbrB;AAAA,IAgBA,qBAAqB;aAAA,SAAC,OAAD;eACjB,KAAC,WAAD,CAAa,YAAS,OAAT,GAAiB,UAA9B,EADiB;MAAA;IAAA,QAhBrB;AAAA,IAmBA,aAAa,WAAW,CAAC,cAAZ,CACT;AAAA,kBAAY,IAAZ;AAAA,MACA,UAAU,KADV;AAAA,MAEA,YAAY,KAFZ;AAAA,MAGA,WAAW,IAHX;AAAA,MAIA,aAAa,IAJb;KADS,CAnBb;AAAA,IA0BA,UAAU,CAAC,EAAX,CAAc,QAAd,EAAwB,QAAxB,CA1BA;AAAA,IA2BA,UAAU,CAAC,EAAX,CAAc,UAAd,EAA0B,UAA1B,CA3BA;AAAA,IA6BA,MAAM,CAAC,aAAa,CAAC,EAArB,CAAwB,kBAAxB,EAA4C,kBAA5C,CA7BA;WA8BA,UAAU,CAAC,aAAa,CAAC,EAAzB,CAA4B,kBAA5B,EAAgD,kBAAhD,EA/Ba;EAAA,CA/HjB;CAFQ,CAAZ;CCAA;;AAAA,KACI;AAAA,qCAAmC,6BAAnC;AAAA,EACA,mCAAmC,4BADnC;AAAA,EAEA,sCAAsC,wDAFtC;AAAA,EAGA,oBAAoB,oDAHpB;AAAA,EAIA,mBAAmB,0BAJnB;AAAA,EAKA,wBAAwB,+CALxB;AAAA,EAMA,4BAA4B,iBAN5B;AAAA,EAOA,iDAAiD,6BAPjD;AAAA,EAQA,mCAAmC,iCARnC;AAAA,EASA,iCAAiC,oDATjC;AAAA,EAUA,kCAAkC,qFAVlC;AAAA,EAWA,QAAQ,MAXR;AAAA,EAYA,OAAO,KAZP;AAAA,EAaA,cAAc,YAbd;AAAA,EAcA,wBAAwB,sBAdxB;AAAA,EAeA,kCAAkC,gCAflC;AAAA,EAgBA,MAAM,IAhBN;AAAA,EAiBA,OAAO,KAjBP;AAAA,EAkBA,aAAa,WAlBb;AAAA,EAmBA,eAAe,aAnBf;AAAA,EAoBA,cAAc,YApBd;AAAA,EAqBA,cAAc,YArBd;AAAA,EAsBA,gBAAgB,cAtBhB;AAAA,EAuBA,cAAc,YAvBd;AAAA,EAwBA,oBAAoB,qCAxBpB;AAAA,EAyBA,mBAAmB,6EAzBnB;AAAA,EA4BA,oBAAoB,gFA5BpB;CADJ;CCGA;;AAAA,cAAc,SAAC,MAAD;AACV;AAAA;uBAAA;AACI,cAAyB,CAAC,OAAN,EAApB;AAAA,aAAO,KAAP;KADJ;AAAA;AAEA,SAAO,IAAP,CAHU;AAAA,CAAd;CCCA;;AAAA,QAAQ,KAAK,CAAC,WAAN,CAEJ;AAAA,UAAQ;WACJ,UAAU,IAAV,EACG,IAAI;AAAA,iBAAW,qBAAX;KAAJ,EACI,IACI;AAAA,UAAI,MAAJ;AAAA,MACA,KAAK,sCADL;KADJ,CADJ,EAII,EAAE;AAAA,iBAAW,aAAX;KAAF,EAA4B,EAAE,gCAAF,CAA5B,CAJJ,EAKI,OACK;AAAA,iBAAW,gBAAX;AAAA,MACA,SAAS,IAAC,eADV;AAAA,MAEA,MAAM,EAAE,+BAAF,CAFN;KADL,CALJ,CADH,EADI;EAAA,CAAR;AAAA,EAYA,gBAAgB;WAEZ,YAAY,OAAZ,EAFY;EAAA,CAZhB;CAFI,CAAR;;AAAA,iBAsBA,GAAoB,KAAK,CAAC,WAAN,CAEhB;AAAA,mBAAiB;AACb;AAAA,mBAAe,mCAAuB,IAAC,MAAK,CAAC,UAAP,KAAuB,EAA7D;AAAA,IACA,SAAS,6BAAiB,IAAC,MAAK,CAAC,IAAP,KAAiB,EAD3C;WAGA;AAAA,iBAAW,gBAAiB,MAA5B;MAJa;EAAA,CAAjB;AAAA,EAMA,QAAQ;AACJ;AAAA,kBAAc,OAAd;AACA,aAAmC,MAAK,CAAC,SAAzC;AAAA,qBAAe,WAAf;KADA;WAEA,UAAU,IAAV,EACI,MAAM;AAAA,YAAM,EAAE,iCAAF,CAAN;KAAN,CADJ,EAEI,KAAK;AAAA,iBAAW,aAAX;KAAL,EACI,EAAE,IAAF,EAAQ,EAAE,iBAAF,CAAR,CADJ,CAFJ,EAII,MACI;AAAA,aAAO,EAAE,kBAAF,CAAP;AAAA,MACA,YAAY,OADZ;AAAA,MAEA,UAAU,YAFV;AAAA,MAGA,cAAc,IAAC,MAAK,CAAC,UAHrB;AAAA,MAIA,KAAK,iBAJL;AAAA,MAKA,aAAa,QALb;AAAA,MAMA,UAAU,IAAC,oBANX;KADJ,CAJJ,EAYI,MACI;AAAA,aAAO,EAAE,oCAAF,CAAP;AAAA,MACA,YAAY,OADZ;AAAA,MAEA,UAAU,MAFV;AAAA,MAGA,MAAM,MAHN;AAAA,MAIA,cAAc,IAAC,MAAK,CAAC,IAJrB;AAAA,MAKA,KAAK,iBALL;AAAA,MAMA,SAAS,cANT;AAAA,MAOA,UAAU,IAAC,cAPX;KADJ,CAZJ,EAqBI,KAAK,IAAL,EACI,OACI;AAAA,iBAAW,WAAX;AAAA,MACA,SAAS,IAAC,oBADV;AAAA,MAEA,MAAM,EAAE,+CAAF,CAFN;KADJ,CADJ,CArBJ,EAHI;EAAA,CANR;AAAA,EAoCA,qBAAqB;AACjB;AAAA,gBAAY,IAAC,KAAI,CAAC,eAAlB;AAAA,IACA,YAAY,IAAC,KAAI,CAAC,eADlB;WAEA,IAAC,SAAD,CACI;AAAA,iBAAW,YAAY,CAAC,SAAD,EAAY,SAAZ,CAAZ,CAAX;KADJ,EAHiB;EAAA,CApCrB;AAAA,EA0CA,eAAe,SAAC,KAAD,EAAQ,KAAR,EAAe,KAAf;AACX;AAAA,gBAAY,IAAC,KAAI,CAAC,eAAlB;AAAA,IACA,YAAY,IAAC,KAAI,CAAC,eADlB;WAEA,IAAC,SAAD,CACI;AAAA,iBAAW,YAAY,CAAC,SAAD,EAAY,SAAZ,CAAZ,CAAX;KADJ,EAHW;EAAA,CA1Cf;AAAA,EAgDA,qBAAqB;AACjB;AAAA,gBAAY,IAAC,KAAI,CAAC,eAAlB;AAAA,IACA,YAAY,IAAC,KAAI,CAAC,eADlB;AAEA,QAAG,IAAC,MAAK,CAAC,SAAV;AACI,eAAS,QAAQ,kBAAR,CAAT;AAAA,MACA,MAAM,CAAC,UAAP,CACI;AAAA,oBAAY,SAAS,CAAC,QAAV,EAAZ;AAAA,QACA,MAAM,SAAS,CAAC,QAAV,EADN;OADJ,CADA;AAAA,MAIA,MAAM,CAAC,UAAP,GAAoB,SAAS,CAAC,QAAV,EAJpB;AAAA,MAKA,MAAM,CAAC,IAAP,GAAc,SAAS,CAAC,QAAV,EALd;aAOA,YAAY,OAAZ,EARJ;KAHiB;EAAA,CAhDrB;CAFgB,CAtBpB;;AAAA,iBA0FA,GAAoB,KAAK,CAAC,WAAN,CAEhB;AAAA,mBAAiB;AACb;AAAA,mBAAe,4BAAgB,IAAC,MAAK,CAAC,GAAP,KAAgB,EAA/C;AAAA,IACA,SAAS,6BAAiB,IAAC,MAAK,CAAC,IAAP,KAAiB,EAD3C;WAGA;AAAA,iBAAW,gBAAiB,MAA5B;MAJa;EAAA,CAAjB;AAAA,EAMA,QAAQ;AACJ;AAAA,kBAAc,OAAd;AACA,aAAmC,MAAK,CAAC,SAAzC;AAAA,qBAAe,WAAf;KADA;WAGA,UAAU,IAAV,EACI,MACI;AAAA,YAAM,EAAE,iCAAF,CAAN;KADJ,CADJ,EAGI,KAAK;AAAA,iBAAW,aAAX;KAAL,EACI,EAAE,IAAF,EAAQ,EAAE,kBAAF,CAAR,CADJ,CAHJ,EAKI,MACI;AAAA,aAAO,EAAE,iBAAF,CAAP;AAAA,MACA,YAAY,OADZ;AAAA,MAEA,UAAU,WAFV;AAAA,MAGA,cAAc,IAAC,MAAK,CAAC,GAHrB;AAAA,MAIA,KAAK,gBAJL;AAAA,MAKA,aAAa,mBALb;AAAA,MAMA,UAAU,IAAC,eANX;AAAA,MAOA,SAAS,IAAC,WAPV;KADJ,CALJ,EAcI,MACI;AAAA,aAAO,EAAE,sBAAF,CAAP;AAAA,MACA,YAAY,OADZ;AAAA,MAEA,MAAM,UAFN;AAAA,MAGA,UAAU,gBAHV;AAAA,MAIA,cAAc,IAAC,MAAK,CAAC,cAJrB;AAAA,MAKA,KAAK,qBALL;AAAA,MAMA,UAAU,IAAC,eANX;AAAA,MAOA,SAAS,IAAC,gBAPV;KADJ,CAdJ,EAuBI,KAAK,IAAL,EACI,OACI;AAAA,iBAAW,MAAX;AAAA,MACA,KAAK,YADL;AAAA,MAEA,SAAS,IAAC,oBAFV;AAAA,MAGA,MAAM,EAAE,0BAAF,CAHN;KADJ,CADJ,EAMI,OACI;AAAA,iBAAW,WAAX;AAAA,MACA,KAAK,YADL;AAAA,MAEA,SAAS,IAAC,oBAFV;AAAA,MAGA,MAAM,EAAE,iCAAF,CAHN;KADJ,CANJ,CAvBJ,EAJI;EAAA,CANR;AAAA,EA6CA,mBAAmB;AACf;AAAA,WAAO,IAAC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAApC,EAAP;WACA,EAAE,IAAF,CAAO,CAAC,KAAR,GAFe;EAAA,CA7CnB;AAAA,EAiDA,gBAAgB;AACZ;AAAA,eAAW,IAAC,KAAI,CAAC,cAAjB;AAAA,IACA,gBAAgB,IAAC,KAAI,CAAC,mBADtB;WAEA,IAAC,SAAD,CACI;AAAA,iBAAW,YAAY,CAAC,QAAD,EAAW,aAAX,CAAZ,CAAX;KADJ,EAHY;EAAA,CAjDhB;AAAA,EAuDA,YAAY,SAAC,KAAD;AACR;AAAA,QAAG,KAAK,CAAC,OAAN,KAAiB,EAApB;AACI,aAAO,IAAC,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,UAA9C,EAAP;aACA,EAAE,IAAF,CAAO,CAAC,KAAR,GAFJ;KADQ;EAAA,CAvDZ;AAAA,EA4DA,iBAAiB,SAAC,KAAD;AACb,QAAG,KAAK,CAAC,OAAN,KAAiB,EAApB;aACI,IAAC,oBAAD,GADJ;KADa;EAAA,CA5DjB;AAAA,EAgEA,qBAAqB;WACjB,YAAY,OAAZ,EADiB;EAAA,CAhErB;AAAA,EAmEA,qBAAqB;AACjB;AAAA,eAAW,IAAC,KAAI,CAAC,cAAjB;AAAA,IACA,gBAAgB,IAAC,KAAI,CAAC,mBADtB;AAGA,QAAG,YAAY,CAAC,QAAD,EAAW,aAAX,CAAZ,CAAH;AACI,eAAS,QAAQ,kBAAR,CAAT;AAAA,MACA,cAAc,QAAQ,uBAAR,CADd;AAAA,MAGA,MAAO,aAAS,CAAC,QAAQ,CAAC,QAAT,EAAD,CAHhB;AAAA,MAIA,WAAW,aAAa,CAAC,QAAd,EAJX;AAAA,MAKA,OAAO,CAAC,GAAR,CAAY,MAAZ,CALA;AAAA,MAMA,UACI;AAAA,aAAK,GAAL;AAAA,QACA,YAAY,MAAM,CAAC,UADnB;AAAA,QAEA,UAAU,QAFV;OAPJ;AAAA,MAWA,aAAa,SAAC,GAAD,EAAM,WAAN;AACT,YAAG,GAAH;AACI,iBAAO,CAAC,GAAR,CAAY,GAAZ;iBACA,MAAO,qDAAkD,GAAzD,EAFJ;SAAA;AAII,oBACI;AAAA,iBAAK,GAAL;AAAA,YACA,UAAU,WAAW,CAAC,EADtB;AAAA,YAEA,gBAAgB,WAAW,CAAC,QAF5B;WADJ;AAAA,UAIA,MAAM,CAAC,UAAP,CAAkB,OAAlB,CAJA;AAAA,UAMA,OAAO,CAAC,GAAR,CAAY,6CACA,sBADZ,CANA;iBAQA,YAAY,OAAZ,EAZJ;SADS;MAAA,CAXb;aA0BA,WAAW,CAAC,cAAZ,CAA2B,OAA3B,EAAoC,UAApC,EA3BJ;KAJiB;EAAA,CAnErB;CAFgB,CA1FpB;CCFA;;AAAA,cAAc,SAAC,KAAD;AACV;AAAA,UAAO,KAAP;AAAA,SACS,OADT;AAEQ,yBAAmB,OAAnB,CAFR;AACS;AADT,SAGS,OAHT;AAIQ,yBAAmB,kBAAkB,MAAlB,CAAnB,CAJR;AAGS;AAHT,SAKS,OALT;AAMQ,yBAAmB,kBAAkB,MAAlB,CAAnB,CANR;AAKS;AALT,SAOS,OAPT;AAQQ,yBAAmB,oBAAoB,MAApB,CAAnB,CARR;AAOS;AAPT,SASS,OATT;AAUQ,yBAAmB,UAAU,MAAV,CAAnB,CAVR;AASS;AATT;AAYQ,yBAAmB,OAAnB,CAZR;AAAA;AAAA,EAcA,KAAK,CAAC,eAAN,CAAsB,gBAAtB,EAAwC,QAAQ,CAAC,IAAjD,CAdA;AAeA,MAA8C,UAAS,OAAvD;WAAA,EAAE,eAAF,CAAkB,CAAC,IAAnB,CAAwB,aAAxB,EAAuC,EAAvC;GAhBU;AAAA,CAAd;;AAAA,MAoBM,CAAC,MAAP,GAAgB;AAEZ;AAAA,QAAM,CAAC,OAAP,GAAiB,MAAM,CAAC,QAAQ,CAAC,QAAhB,KAA4B,WAA7C;AAAA,EAGA,SAAS,MAAM,CAAC,MAAP,IAAiB,MAAM,CAAC,SAAS,CAAC,QAAlC,IAA8C,IAHvD;AAAA,EAIA,UAAU,EAJV;AAAA,EAKA,WAAe,cALf;AAAA,EAMA,UAAU,EANV;AAAA,EAOA,QAAQ,CAAC,MAAT,CAAgB,OAAhB,CAPA;AAAA,EAQA,MAAM,CAAC,CAAP,GAAW,QAAQ,CAAC,CAAC,CAAC,IAAX,CAAgB,QAAhB,CARX;SAUA,YAAY,aAAa,CAAC,QAAd,EAAZ,EAZY;AAAA,CApBhB","sourcesContent":["# Set of components to make the react template building easier.\n\n{div, p, img, span, a, label, input, h1, h2, button} = React.DOM\n\nLine = React.createClass\n\n    render: ->\n        className = @props.className\n        className ?= 'mtl'\n        div className: \"line clearfix #{className}\", @props.children\n\n\nContainer = React.createClass\n\n    render: ->\n        className = 'container '\n        className += @props.className if @props.className\n        div className: className, @props.children\n\n\nTitle = React.createClass\n\n    render: ->\n        h1 {}, @props.text\n\n\nSubtitle = React.createClass\n\n    render: ->\n        h2 {}, @props.text\n\n\nButton = React.createClass\n\n    render: ->\n        button\n            className: \"btn btn-cozy #{@props.className}\"\n            ref: @props.ref\n            onClick: @props.onClick\n        , @props.text\n\n\nField = React.createClass\n\n    getInitialState: ->\n        error: null\n\n    render: ->\n        @props.type ?= 'text'\n        Line null,\n            label className: 'mod w100 mrm', @props.label\n            input\n                type: @props.type\n                className: \"mt1 #{@props.fieldClass}\"\n                ref: @props.inputRef\n                defaultValue: @props.defaultValue\n                onChange: @onChange\n                onKeyUp: @props.onKeyUp\n                placeholder: @props.placeholder\n                id: @props.inputId\n\n            p className: 'error', @state.error if @state.error\n\n    getValue: ->\n        @refs[@props.inputRef].getDOMNode().value\n\n    isValid: ->\n        @getValue() isnt ''\n\n    getError: ->\n        'value is missing'\n\n    onChange: ->\n        val = @refs[@props.inputRef].getDOMNode().value\n        if val is ''\n            @setState error: t @getError()\n        else\n            @setState error: null\n        @props.onChange()\n\n\nInfoLine = React.createClass\n\n    render: ->\n        if @props.link?\n            value = span null,\n                a\n                    href: \"#{@props.link.type}://#{@props.value}\"\n                , @props.value\n        else\n            value = span null,  @props.value\n\n        Line className: 'line mts',\n            span className: 'mod w100p left', \"#{@props.label}:\"\n            span className: 'mod left', value\n","path = require 'path-extra'\nfs = require 'fs'\n\n\n# This module loads the current configuration, sets up the global variables\n# related to configuration and provide helpers to modify it.\n\nhomedir = path.homedir()\nconfigDir = path.join homedir, '.cozy-data-proxy'\nconfigPath = path.join configDir, 'config.json'\nif not fs.existsSync configPath\n    fs.writeFileSync configPath, JSON.stringify devices: {}, null, 2\n\nconfig = require configPath\n\nkeys = Object.keys config.devices\ndevice = config.devices[keys[0]] if keys.length > 0\ndevice ?= {}\n\nconfigHelpers =\n\n    # Update device config fields in the config file.\n    saveConfigSync: (deviceConfig) ->\n        delete config.devices[device.deviceName]\n        for key, value of deviceConfig\n            device[key] = deviceConfig[key]\n        config.devices[device.deviceName] = device\n\n        fs.writeFileSync configPath, JSON.stringify config, null, 2\n        console.log 'Configuration file successfully updated'\n\n    getState: ->\n        if not device.deviceName?\n            'INTRO'\n        else if not device.path?\n            'STEP1'\n        else if not device.deviceId?\n            'STEP2'\n        else\n            'STATE'\n","StateView = React.createClass\n\n    getInitialState: ->\n        logs: []\n        sync: false\n\n    render: ->\n        logs = []\n        if @state.logs.length is 0\n            logs.push Line className: 'smaller', 'nothing to notice...'\n        else\n            i = 0\n            logs.push Line key: \"log-#{i++}\", className: 'smaller', log for log in @state.logs\n            logs.reverse()\n\n        if @state.sync\n            state = t 'on'\n            syncButtonLabel = t 'stop sync'\n        else\n            state = t 'off'\n            syncButtonLabel = t 'start sync'\n\n        Container className: 'line',\n            Title text: 'Cozy Data Proxy'\n            Container className: 'mod w50 left',\n                Subtitle text: 'Parameters'\n                InfoLine label: t('device name'), value: device.deviceName\n                InfoLine\n                    label: t('path')\n                    link:\n                        type: 'file'\n                    value: device.path\n                InfoLine label: t('url'), value: device.url\n                InfoLine label: t('sync state'), value: state\n            Container className: 'mod w50 left',\n                Subtitle text: 'Actions'\n                Line className: 'mts',\n                    Button\n                        className: 'left action'\n                        onClick: @onSyncClicked\n                        text: syncButtonLabel\n                Line className: 'mts',\n                    Button\n                        className: 'left'\n                        onClick: @onResyncClicked\n                        text: t 'resync all'\n                    #Button\n                        #className: 'left'\n                        #onClick: @onDeleteFilesClicked\n                        #text: t 'delete files'\n                Line className: 'mtm',\n                    Button\n                        className: 'smaller'\n                        onClick: @onDeleteConfigurationClicked\n                        text: t 'delete configuration'\n            Line null\n            Line null,\n                Subtitle text: 'Logs'\n                logs\n                Line null,\n                    Button\n                        className: 'left smaller'\n                        onClick: @clearLogs\n                        text: t 'clear logs'\n\n    onSyncClicked: ->\n        if @state.sync\n            @setState sync: false\n            @replicator.cancel() if @replicator\n            @watcher.close() if @watcher\n            @displayLog 'Synchronization is on'\n        else\n            replication = require './backend/replication'\n            filesystem = require './backend/filesystem'\n            binary = require './backend/binary'\n            @displayLog 'Replication is starting'\n\n            onChange = (change) =>\n                @displayLog \"#{change.docs_written} elements replicated\"\n\n            onComplete = =>\n                @displayLog 'Replication is finished.'\n\n            onBinaryDownloaded = (binaryPath) =>\n                @displayLog \"File #{binaryPath} downloaded\"\n\n            onDirectoryCreated = (dirPath) =>\n                @displayLog \"Folder #{dirPath} created\"\n\n            @replicator = replication.runReplication\n                fromRemote: true\n                toRemote: true\n                continuous: true\n                rebuildFs: false\n                fetchBinary: true\n\n            @replicator.on 'change', onChange\n            @replicator.on 'complete', onComplete\n            @watcher = filesystem.watchChanges true, true\n\n            binary.infoPublisher.on 'binaryDownloaded', onBinaryDownloaded\n            filesystem.infoPublisher.on 'directoryCreated', onDirectoryCreated\n\n            @displayLog 'Synchronization is on'\n\n            @setState sync: true\n\n    clearLogs: ->\n        @setState logs: []\n\n    displayLog: (log) ->\n        logs = @state.logs\n        moment = require 'moment'\n        logs.push moment().format('HH:MM:SS ') + log\n        @setState logs: logs\n\n    onDeleteConfigurationClicked: ->\n        config = require './backend/config'\n        config.removeRemoteCozy device.deviceName\n        config.saveConfig()\n        alert t 'Configuration deleted.'\n        renderState 'INTRO'\n\n    onDeleteFilesClicked: ->\n        del = require 'del'\n        del \"#{device.path}/*\", force: true, (err) ->\n            console.log err if err\n            alert t 'All files were successfully deleted.'\n\n    onResyncClicked: ->\n        replication = require './backend/replication'\n        filesystem = require './backend/filesystem'\n        binary = require './backend/binary'\n\n        @clearLogs()\n        @displayLog 'Replication is starting'\n\n        onChange = (change) =>\n            @displayLog \"#{change.docs_written} elements replicated\"\n\n        onComplete = =>\n            @displayLog 'Replication is finished.'\n\n        onBinaryDownloaded = (binaryPath) =>\n            @displayLog \"File #{binaryPath} downloaded\"\n\n        onDirectoryCreated = (dirPath) =>\n            @displayLog \"Folder #{dirPath} created\"\n\n        replicator = replication.runReplication\n            fromRemote: true\n            toRemote: false\n            continuous: false\n            rebuildFs: true\n            fetchBinary: true\n\n        replicator.on 'change', onChange\n        replicator.on 'complete', onComplete\n\n        binary.infoPublisher.on 'binaryDownloaded', onBinaryDownloaded\n        filesystem.infoPublisher.on 'directoryCreated', onDirectoryCreated\n","en =\n    'cozy files configuration 1 on 2': 'Configure your device (1/2)'\n    'cozy files configuration 2 on 2': 'Register your device (2/2)'\n    'directory to synchronize your data': 'Path of the folder where you will see your cozy files:'\n    'your device name': 'The name used to sign up your device to your Cozy:'\n    'your remote url': 'The web URL of your Cozy'\n    'your remote password': 'The password you use to connect to your Cozy:'\n    'go back to previous step': '< Previous step'\n    'save your device information and go to step 2': 'Save then go to next step >'\n    'register device and synchronize': 'Register then go to next step >'\n    'start configuring your device': 'Start to configure your device and sync your files'\n    'welcome to the cozy data proxy': 'Welcome to the Cozy Data Proxy, the module that syncs your computer with your Cozy!'\n    'path': 'Path'\n    'url': 'URL'\n    'resync all': 'Resync All'\n    'delete configuration': 'Delete configuration'\n    'delete configuration and files': 'Delete configuration and files'\n    'on': 'on'\n    'off': 'off'\n    'stop sync': 'Stop sync'\n    'device name': 'Device name'\n    'sync state': 'Sync state'\n    'clear logs': 'Clear logs'\n    'delete files': 'Delete files'\n    'start sync': 'Start sync'\n    'value is missing': 'A value is required for this field.'\n    'first step text': \"\"\"\nPrior to register your computer to your Cozy, we need information about it.\n\"\"\"\n    'second step text': \"\"\"\nIt's time to register your computer to your Cozy.\n(password won't be stored).\n\"\"\"\n","# Sets of helper functions\n\n\nisValidForm = (fields) ->\n    for field in fields\n        return false unless field.isValid()\n    return true\n","# Data proxy configuration wizard.\n\n\n# Intro splash screen, it's a welcome message.\nIntro = React.createClass\n\n    render: ->\n        Container null,\n           div className: 'intro txtcenter mtl',\n               img\n                   id: 'logo'\n                   src: 'client/public/icon/bighappycloud.png'\n               p className: 'mtl biggest', t 'welcome to the cozy data proxy'\n               Button\n                    className: 'mtl bigger pam'\n                    onClick: @onEnterClicked\n                    text: t 'start configuring your device'\n\n    onEnterClicked: ->\n        #$('.intro').addClass 'slide-leave-up'\n        renderState 'STEP1'\n\n\n# First configuration step, it asks for the device name used to register to the\n# Cozy and for the directory in which store the synced fileds.\n# It only saves the value to the configuration file.\nConfigFormStepOne = React.createClass\n\n    getInitialState: ->\n        isDeviceName = @props.deviceName? and @props.deviceName isnt ''\n        isPath = @props.path? and @props.path isnt ''\n\n        validForm: isDeviceName and isPath\n\n    render: ->\n        buttonClass = 'right'\n        buttonClass += ' disabled' unless @state.validForm\n        Container null,\n            Title text: t 'cozy files configuration 1 on 2'\n            Line className: 'explanation',\n                p null, t 'first step text'\n            Field\n                label: t 'your device name'\n                fieldClass: 'w300p'\n                inputRef: 'deviceName'\n                defaultValue: @props.deviceName\n                ref: 'deviceNameField'\n                placeholder: 'Laptop'\n                onChange: @onDeviceNameChanged\n            Field\n                label: t 'directory to synchronize your data'\n                fieldClass: 'w500p'\n                inputRef: 'path'\n                type: 'file'\n                defaultValue: @props.path\n                ref: 'devicePathField'\n                inputId: 'folder-input'\n                onChange: @onPathChanged\n            Line null,\n                Button\n                    className: buttonClass\n                    onClick: @onSaveButtonClicked\n                    text: t 'save your device information and go to step 2'\n\n    onDeviceNameChanged: ->\n        fieldName = @refs.deviceNameField\n        fieldPath = @refs.devicePathField\n        @setState\n            validForm: isValidForm [fieldName, fieldPath]\n\n    onPathChanged: (event, files, label) ->\n        fieldName = @refs.deviceNameField\n        fieldPath = @refs.devicePathField\n        @setState\n            validForm: isValidForm [fieldName, fieldPath]\n\n    onSaveButtonClicked: ->\n        fieldName = @refs.deviceNameField\n        fieldPath = @refs.devicePathField\n        if @state.validForm\n            config = require './backend/config'\n            config.updateSync\n                deviceName: fieldName.getValue()\n                path: fieldPath.getValue()\n            device.deviceName = fieldName.getValue()\n            device.path = fieldPath.getValue()\n\n            renderState 'STEP2'\n\n\n# Step 2 of the configuration. It asks for the remote Cozy URL and for the\n# remote Cozy password.\n# Once done, it registers the device to the Cozy then it saves the cozy URL in\n# the configuration.\nConfigFormStepTwo = React.createClass\n\n    getInitialState: ->\n        isDeviceName = @props.url? and @props.url isnt ''\n        isPath = @props.path? and @props.path isnt ''\n\n        validForm: isDeviceName and isPath\n\n    render: ->\n        buttonClass = 'right'\n        buttonClass += ' disabled' unless @state.validForm\n\n        Container null,\n            Title\n                text: t 'cozy files configuration 2 on 2'\n            Line className: 'explanation',\n                p null, t 'second step text'\n            Field\n                label: t 'your remote url'\n                fieldClass: 'w300p'\n                inputRef: 'remoteUrl'\n                defaultValue: @props.url\n                ref: 'remoteUrlField'\n                placeholder: 'john.cozycloud.cc'\n                onChange: @onFieldChanged\n                onKeyUp: @onUrlKeyUp\n            Field\n                label: t 'your remote password'\n                fieldClass: 'w300p'\n                type: 'password'\n                inputRef: 'remotePassword'\n                defaultValue: @props.remotePassword\n                ref: 'remotePasswordField'\n                onChange: @onFieldChanged\n                onKeyUp: @onPasswordKeyUp\n            Line null,\n                Button\n                    className: 'left'\n                    ref: 'backButton'\n                    onClick: @onBackButtonClicked\n                    text: t 'go back to previous step'\n                Button\n                    className: buttonClass\n                    ref: 'nextButton'\n                    onClick: @onSaveButtonClicked\n                    text: t 'register device and synchronize'\n\n    componentDidMount: ->\n        node = @refs.remoteUrlField.refs.remoteUrl.getDOMNode()\n        $(node).focus()\n\n    onFieldChanged: ->\n        fieldUrl = @refs.remoteUrlField\n        fieldPassword = @refs.remotePasswordField\n        @setState\n            validForm: isValidForm [fieldUrl, fieldPassword]\n\n    onUrlKeyUp: (event) ->\n        if event.keyCode is 13\n            node = @refs.remotePasswordField.refs.remotePassword.getDOMNode()\n            $(node).focus()\n\n    onPasswordKeyUp: (event) ->\n        if event.keyCode is 13\n            @onSaveButtonClicked()\n\n    onBackButtonClicked: ->\n        renderState 'STEP1'\n\n    onSaveButtonClicked: ->\n        fieldUrl = @refs.remoteUrlField\n        fieldPassword = @refs.remotePasswordField\n\n        if isValidForm [fieldUrl, fieldPassword]\n            config = require './backend/config'\n            replication = require './backend/replication'\n\n            url = \"https://#{fieldUrl.getValue()}\"\n            password = fieldPassword.getValue()\n            console.log device\n            options =\n                url: url\n                deviceName: device.deviceName\n                password: password\n\n            saveConfig = (err, credentials) ->\n                if err\n                    console.log err\n                    alert \"An error occured while registering your device. #{err}\"\n                else\n                    options =\n                        url: url\n                        deviceId: credentials.id\n                        devicePassword: credentials.password\n                    config.updateSync options\n\n                    console.log 'Remote Cozy properly configured to work ' + \\\n                                'with current device.'\n                    renderState 'STATE'\n\n            replication.registerDevice options, saveConfig\n","\n\nrenderState = (state) ->\n    switch state\n        when 'INTRO'\n            currentComponent = Intro()\n        when 'STEP1'\n            currentComponent = ConfigFormStepOne device\n        when 'STEP2'\n            currentComponent = ConfigFormStepTwo device\n        when 'STEP3'\n            currentComponent = ConfigFormStepThree device\n        when 'STATE'\n            currentComponent = StateView device\n        else\n            currentComponent = Intro()\n\n    React.renderComponent currentComponent, document.body\n    $(\"#folder-input\").attr('nwdirectory', '') if state is 'STEP1'\n\n\n# Waits for the DOM to be ready\nwindow.onload = ->\n\n    window.__DEV__ = window.location.hostname is 'localhost'\n\n    # use Cozy instance locale or navigator language or \"en\" by default\n    locale = window.locale or window.navigator.language or \"en\"\n    locales = {}\n    polyglot = new Polyglot()\n    locales = en\n    polyglot.extend locales\n    window.t = polyglot.t.bind polyglot\n\n    renderState configHelpers.getState()\n"]}